load("//bazel:tachyon.bzl", "if_polygon_zkevm_backend")
load("//bazel:tachyon_cc.bzl", "tachyon_cc_library", "tachyon_cc_unittest")
load("//tachyon/math/finite_fields/generator/prime_field_generator:build_defs.bzl", "generate_prime_fields")

package(default_visibility = ["//visibility:public"])

generate_prime_fields(
    name = "goldilocks",
    class_name = "Goldilocks",
    hdr_include_override = """#if defined(TACHYON_POLYGON_ZKEVM_BACKEND)
#include "tachyon/math/finite_fields/goldilocks_prime/prime_field_goldilocks.h"
#include "tachyon/build/build_config.h"
#else
#include "tachyon/math/finite_fields/prime_field.h"
#endif  // defined(TACHYON_POLYGON_ZKEVM_BACKEND)""",
    # 2⁶⁴ - 2³² + 1
    # Hex: 0xffffffff00000001
    modulus = "18446744069414584321",
    namespace = "tachyon::math",
    special_prime_override = """#if defined(TACHYON_POLYGON_ZKEVM_BACKEND)
#if ARCH_CPU_X86_64
  constexpr static bool kIsSpecialPrime = true;
  constexpr static bool kIsGoldilocks = true;
#else
  #error Goldilocks backend is only supported on x86_64 platform.
#endif
#else
  constexpr static bool kIsSpecialPrime = false;
#endif""",
    deps = if_polygon_zkevm_backend([
        ":prime_field_goldilocks",
        "//tachyon/build:build_config",
    ]),
)

tachyon_cc_library(
    name = "prime_field_goldilocks",
    hdrs = ["prime_field_goldilocks.h"],
    defines = ["TACHYON_POLYGON_ZKEVM_BACKEND"],
    deps = [
        "//tachyon/base:random",
        "//tachyon/base/strings:string_number_conversions",
        "//tachyon/base/strings:string_util",
        "//tachyon/math/base/gmp:gmp_util",
        "//tachyon/math/finite_fields:prime_field_base",
    ] + if_polygon_zkevm_backend([
        "@polygon_zkevm_goldilocks//:base_field",
    ]),
)

tachyon_cc_unittest(
    name = "goldilocks_prime_unittests",
    srcs = if_polygon_zkevm_backend(["prime_field_goldilocks_unittest.cc"]),
    deps = [":goldilocks"],
)
